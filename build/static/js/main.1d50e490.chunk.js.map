{"version":3,"sources":["components/Episode.js","components/Character.js","App.js","index.js"],"names":["Episode","props","episode","epiName","episodes","map","epi","url","name","href","Char","styled","div","Head","h1","Epis","ul","ImgContainer","BodyContainer","ContentContainer","ShowEpisodes","button","Character","character","status","species","image","location","id","useState","toggle","toggleToggle","target","src","alt","className","onClick","e","key","App","characters","setCharacters","setEpisodes","locations","setLocations","useEffect","axios","get","then","res","Array","from","data","catch","err","console","log","ReactDOM","render","document","getElementById"],"mappings":"0SAEe,SAASA,EAAQC,GAG5B,IAAMC,EAAUD,EAAMC,QAChBC,EAAUF,EAAMG,SAASC,KAAI,SAAAC,GAAG,OAAKA,EAAIC,MAAQL,EAAYI,EAAIE,KAAO,QAC9E,OACG,4BACI,uBAAGC,KAAMP,EAAQK,KAAMJ,I,kxCCHlC,IAAMO,EAAMC,IAAOC,IAAT,KAYJC,EAAOF,IAAOG,GAAV,KAOJC,EAAOJ,IAAOK,GAAV,KAKJC,EAAeN,IAAOC,IAAV,KAQZM,EAAgBP,IAAOC,IAAV,KAObO,EAAmBR,IAAOC,IAAV,KAMhBQ,EAAeT,IAAOU,OAAV,KASH,SAASC,EAAUrB,GAAQ,IAAD,EACiCA,EAAMsB,UAApEf,EAD6B,EAC7BA,KAAMD,EADuB,EACvBA,IAAKiB,EADkB,EAClBA,OAAQC,EADU,EACVA,QAASC,EADC,EACDA,MAAOxB,EADN,EACMA,QAASyB,EADf,EACeA,SADf,KACyBC,GAE/BC,oBAAS,IAHH,mBAG9BC,EAH8B,KAGtBC,EAHsB,KAQrC,OACI,kBAACrB,EAAD,KACI,kBAACQ,EAAD,KACI,kBAACL,EAAD,UACI,uBAAGJ,KAAMF,EAAKyB,OAAO,UAAUxB,IAEnC,kBAACW,EAAD,CAAkBS,GAAG,OACjB,kBAACX,EAAD,KACI,yBAAKgB,IAAKP,EAAOQ,IAAK1B,KAE1B,kBAACW,EAAD,CAAkBgB,UAAU,UACxB,kBAAChB,EAAD,CAAkBgB,UAAU,UACxB,wCACA,2BAAIV,IAER,kBAACN,EAAD,CAAkBgB,UAAU,UACxB,uCACA,2BAAIX,IAER,kBAACL,EAAD,CAAkBgB,UAAU,UACxB,oDACA,uBAAG1B,KAAMkB,EAASpB,KAAMoB,EAASnB,SAIzC,kBAACW,EAAD,CAAkBgB,UAAU,OACxB,+DACA,kBAACf,EAAD,CAAcgB,QA/BlB,SAACC,GACbN,GAAcD,KA8BoCA,EAAsB,YAAb,cAInD,kBAACf,EAAD,KACKe,EACG5B,EAAQG,KAAI,SAAAC,GACZ,OAAQ,kBAACN,EAAD,CACJE,QAASI,EACTF,SAAUH,EAAMG,SAChBkC,IAAKpC,EAAQ0B,QAGnB,O,sKCtGVjB,IAAOC,IAAV,KAAT,IAmFe2B,EA1EH,WAAM,MAKoBV,mBAAS,IAL7B,mBAKTW,EALS,KAKGC,EALH,OAMgBZ,mBAAS,IANzB,mBAMTzB,EANS,KAMCsC,EAND,OAOkBb,mBAAS,IAP3B,mBAOTc,EAPS,KAOEC,EAPF,KAmDhB,OAvCEC,qBAAU,WACNC,IACKC,IAAI,uCACJC,MAAK,SAAAC,GACFR,EAAcS,MAAMC,KAAKF,EAAIG,UAEhCC,OAAM,SAAAC,GACHC,QAAQC,IAAI,qBAAsBF,QAI5C,IAEFT,qBAAU,WACFC,IACKC,IADL,qCAEKC,MAAK,SAAAC,GACFP,EAAYQ,MAAMC,KAAKF,EAAIG,UAE9BC,OAAM,SAAAC,GACHC,QAAQC,IAAI,qBAAsBF,QAIhD,IAEFT,qBAAU,WACFC,IACKC,IADL,sCAEKC,MAAK,SAAAC,GACFL,EAAaM,MAAMC,KAAKF,EAAIG,UAE/BC,OAAM,SAAAC,GACHC,QAAQC,IAAI,qBAAsBF,QAIhD,IAIN,6BACA,yBAAKnB,UAAU,WACX,6BACI,6BAEIK,EAAWnC,KAAI,SAAAkB,GACX,OAAQ,kBAACD,EAAD,CACJC,UAAWA,EACXnB,SAAUA,EACVuC,UAAWA,EACXL,IAAKf,EAAUK,YCzEnC6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1d50e490.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Episode(props) {\r\n    \r\n\r\n    const episode = props.episode\r\n    const epiName = props.episodes.map(epi => (epi.url === episode) ?  epi.name : null)\r\n    return (\r\n       <li>\r\n           <a href={episode.url}>{epiName}</a>\r\n       </li>\r\n    )\r\n}\r\n\r\n            \r\n    \r\n        \r\n                        ","// Write your Character component here\r\nimport React, { useState } from 'react'\r\nimport Episode from './Episode'\r\n// import Location from './Location'\r\nimport styled from 'styled-components'\r\n\r\nconst Char =styled.div`\r\n    display: block;\r\n    border: 1px solid  #f9e7dc;\r\n    margin-left: 50%;\r\n    margin-bottom: 2rem;\r\n    width: 40vw;\r\n    background: rgba(0, 0, 0, 0.6);\r\n    text-align: center;\r\n    position: relative;\r\n\r\n`\r\n\r\nconst Head = styled.h1`\r\n    display:block;\r\n    width: 100%;\r\n    margin: auto 0;\r\n    \r\n`\r\n\r\nconst Epis = styled.ul`\r\n    columns: 2;\r\n    list-style: none;git ad\r\n`\r\n\r\nconst ImgContainer = styled.div`\r\n    display: inline-block;\r\n    width: 75%;\r\n    img {\r\n        width: 75%;\r\n        }\r\n\r\n`\r\nconst BodyContainer = styled.div`\r\n    color: #f9e7dc;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    padding: 1rem;\r\n`\r\nconst ContentContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: auto 0;\r\n`\r\nconst ShowEpisodes = styled.button`\r\n    background-color: #f9e7dc;\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 25%;\r\n    margin: 1rem auto;\r\n    border-radius: 5px;\r\n`\r\n\r\nexport default function Character(props) {\r\n    const { name, url, status, species, image, episode, location, id  } = props.character\r\n\r\n    const [toggle, toggleToggle] = useState(false)\r\n    const onClick = (e) => {\r\n        toggleToggle(!toggle)\r\n    } \r\n\r\n    return (\r\n        <Char> \r\n            <BodyContainer>\r\n                <Head>  {/* eslint-disable-next-line*/}\r\n                    <a href={url} target='_blank'>{name}</a>\r\n                </Head>\r\n                <ContentContainer id='big'>\r\n                    <ImgContainer>\r\n                        <img src={image} alt={name} />\r\n                    </ImgContainer>\r\n                    <ContentContainer className='column'>\r\n                        <ContentContainer className='column'>\r\n                            <h2>Species:</h2>\r\n                            <p>{species}</p>\r\n                        </ContentContainer>\r\n                        <ContentContainer className='column'>\r\n                            <h2>Status:</h2>\r\n                            <p>{status}</p>\r\n                        </ContentContainer>\r\n                        <ContentContainer className='column'>\r\n                            <h3>Last Known Location:</h3>\r\n                            <a href={location.url}>{location.name}</a>\r\n                        </ContentContainer>\r\n                    </ContentContainer>\r\n                </ContentContainer>\r\n                    <ContentContainer className='row'>\r\n                        <h4>Want to see all their Episodes?</h4>\r\n                        <ShowEpisodes onClick={onClick}>{!toggle ? 'Show Me!' : 'Hide Them'}</ShowEpisodes>\r\n                    </ContentContainer>\r\n            </BodyContainer>\r\n\r\n                <Epis>\r\n                    {toggle ? \r\n                        episode.map(epi => {\r\n                        return (<Episode\r\n                            episode={epi}\r\n                            episodes={props.episodes}\r\n                            key={episode.id}\r\n                        />)\r\n                        })\r\n                    : null}\r\n                </Epis>\r\n        </Char>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport Character from './components/Character'\nimport styled from 'styled-components'\n\nconst app = styled.div`\n    display: flex;\n    max-width: 40vw;\n    border: 2px dotted brown;\n    padding 2 rem;\n  `\n\n\n\nconst App = () => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n\n\n  const [characters, setCharacters] = useState([])\n  const [episodes, setEpisodes] = useState([])\n  const [locations, setLocations] = useState([])\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n    useEffect(() => {\n        axios\n            .get('http://localhost:4242/api/character')\n            .then(res => {\n                setCharacters(Array.from(res.data)\n            )})\n            .catch(err => {\n                console.log('!!ERR!! (get #1): ', err)\n                // alert(`Something ain't right here, bud =( (get#1)`)\n                // debugger\n            })\n    },[])\n\n    useEffect(() => {\n            axios\n                .get(`http://localhost:4242/api/episode`)\n                .then(res => {\n                    setEpisodes(Array.from(res.data))\n                })\n                .catch(err => {\n                    console.log('!!ERR!! (get #2): ', err)\n                    // alert(`Something ain't right here, bud =( (get#2)`)\n                    // debugger\n                })            \n    },[])\n\n    useEffect(() => {\n            axios\n                .get(`http://localhost:4242/api/location`)\n                .then(res => {\n                    setLocations(Array.from(res.data))\n                })\n                .catch(err => {\n                    console.log('!!ERR!! (get #3): ', err)\n                    // alert(`Something ain't right here, bud =( (get#3)`)\n                    // debugger\n                })\n    },[])\n\n  return (\n\n<div>\n<div className='filler'></div>\n    <div>\n        <app>\n            {\n            characters.map(character => {\n                return (<Character\n                    character={character}\n                    episodes={episodes}\n                    locations={locations}\n                    key={character.id}\n                    />)})\n            }\n        </app>\n    </div>\n</div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}